q(save="no")
install.packages("urca")
install.packages("urca", dependencies=True)
install.packages("urca", dependencies=TRUE)
install.packages("rugarch", dependencies=TRUE)
install.packages("plm", dependencies=TRUE)
install.packages("skewt", dependencies=TRUE)
q(save="no")
library(rugarch)
library("urca")
install.packages("urca")
install.packages("urca")
gar <- function(period) {}
gar <- function(period) { y<- c(); for i in 2:period {y[i]<- 0.5*y[i-1] + rnorm()}}
rnorm()
rnorm(1)
gar <- function(period) { y<- c(); for i in 2:period {y[i]<- 0.5*y[i-1] + rnorm(1)}}
gar <- function(period) { y<- c(); for i in 2:period {y[i]<- 0.5*y[i-1] + rnorm(1);} y}
gar <- function(period) {
y<-c(0);
for t in 2:period
y[i] <- 0.5*y[i-1] + rnorm(1);
y;
}
gar <- function(period) {
y <- c(0);
for (t in 2:period)
y[i] <- 0.5*y[i-1] + rnorm(1);
y;
}
y <- gar(1000)
gar <- function(period) {
y <- c(0);
for (t in 2:period)
y[t] <- 0.5*y[t-1] + rnorm(1);
y;
}
y <- gar(1000)
z <- y + 3
help(arma)
help(ar)
ar(y)
summary(ar(y))
gar <- function(period) {
y <- c(0);
for (t in 2:period)
y[t] <- 1 + 0.5*y[t-1] + rnorm(1);
y;
}
z <- y + 4
ar(z)
ar(y)
??arma
help(arima)
fy <- arima(y, order=c(1,0,0))
fz <- arima(z, order=c(1,0,0))
fy
fz
1 + 0.5*4
y <- gar(period=5000)
z <- y+4
fy <- arima(y, order=c(1,0,0))
fz <- arima(z, order=c(1,0,0))
fy
fz
1+0.5*4
2+0.5*4
help(precomp)
help(prcomp)
help(cov)
q(save="no")
library(lars)
help(pars)
help(lars)
help(cv.lars)
q(save="no")
x <- c(1,2,3,4,NA)
x
x[x!=NA]
x[1]
x[x!="NA"]
x[x=3]
x
x[x=NA]
x[1]==NA
x[1]
x
x[1]=="NA"
x[5]=="NA"
x <- c(1,2,3,4,"NA")
x[x!="NA"]
help(NA)
x
x <- c(1,2,3,4,NA)
x
is.na(x)
x[is.na(x)==FALSE]
q(save="no")
library(urca)
help(ur.df)
help(HEGY.test)
library(uroot)
install.pacakges("uroot", dependencies=TRUE)
install.pacakge("uroot", dependencies=TRUE)
install.pacakges("uroot", dependencies=TRUE)
install.packges("uroot", dependencies=TRUE)
install.packages("uroot", dependencies=TRUE)
library(uroot)
q(save="no")
t
trend = seq(1,100)
trend
plot(trend, type="l")
y = 0.1 + 0.5*trend + rnorm(100)
plot(y, type="l")
x = rnorm(100)
y = 0.1 + 0.5*trend + 10*x + rnorm(100)
plot(y, type="l")
lmy <- lm(y~1+trend)
summary(lmy)
u <- residuals(lmy)
plot(u, type="l")
lmu <- lm(u~1+x)
summary(lmu)
plot(u, type="l")
plot(y, type="l"
)
plot(y, type="l")
ry <- y[2:100]-y[1:99]
plot(ry, type="l")
q(SAVE="NO")
q(SAVE="no")
q(save="no")
library(rugarch)
help(ugarchfit)
version()
help(version)
R.Version()
cap <- read.csv("~/Dropbox/honours_equalisation/R/data/cap.csv",header=TRUE, sep=",")
names(cap)
attach(cap)
names(cap)
library(urca)
help(ur.za)
allza <- sapply(names(cap), function (series) {ur.za(cap[[series]], model="both", lag=4)})
summary(allza)
allza$NSW
summary(allza$NSW)
names(allza$NSW)
slots(allza$NSW)
Slots(allza$NSW)
SlotNames(allza$NSW)
slotNames(allza$NSW)
names(allza)
allza[["NSW"]]
for (i in names(allza)) { print(allza[[i]]$tstats); print(allza[[i]]$cv)}
allza[["NSW"]]@tstats
allza[["NSW"]]@teststats
allza[["NSW"]]@teststat
for (i in names(cap)) { print(allza[[i]]@teststat); print(allza[[i]]@cval)}
names(cap)
for (i in names(cap)) {print(i); print(allza[[i]]@teststat); print(allza[[i]]@cval)}
ur.df(WA.J, type="both", selectlags="BIC")
ur.df(WA.J, type="trend", selectlags="BIC")
summary(ur.df(WA.J, type="trend", selectlags="BIC"))
plot(WA.J, type="l")
View(cap)
allza <- sapply(names(cap), function (series) { if (series == "NT") {temp <- cap[[i]][17:]} else {if (series == "ACT") {temp<-cap[[i]][28:]} else {temp<-cap[[i]]}}ur.za(temp, model="both", lag=4)})
n <- 43
allza <- sapply(names(cap), function (series) { if (series == "NT") {temp <- cap[[i]][17:n]} else {if (series == "ACT") {temp<-cap[[i]][28:n]} else {temp<-cap[[i]]}}ur.za(temp, model="both", lag=4)})
allza <- sapply(names(cap), function (series) { if (series == "NT") {temp <- cap[[i]][17:n]} else {if (series == "ACT") {temp<-cap[[i]][28:n]} else {temp<-cap[[i]]}} ur.za(temp, model="both", lag=4)})
allza <- sapply(names(cap), function (series) { if (series == "NT") {temp <- cap[[i]][17:n]} else {if (series == "ACT") {temp<-cap[[i]][28:n]} else {temp<-cap[[i]]}} ur.za(temp, model="both", lag=4)})
tempf <- function(series) {
if (series == "NT") {
temp <- cap[[i]][17:n]
} else {
if (series == "ACT") {
temp<-cap[[i]][28:n]
} else {
temp<-cap[[i]]
}
}
ur.za(temp, model="both", lag=4)
}
allza <- sapply(names(cap), tempf)
for (i in names(cap)) {print(i); print(allza[[i]]@teststat); print(allza[[i]]@cval)}
summary(allza$NSW)
summary(allza$WA)
tempf <- function(series) {
if (series == "NT") {
temp <- cap[[i]][17:n]
} else {
if (series == "ACT") {
temp<-cap[[i]][28:n]
} else {
temp<-cap[[i]]
}
}
print(series)
ur.za(temp, model="both", lag=4)
}
allza <- sapply(names(cap), tempf)
allza$NSW
allza$WA
tempf <- function(series) {
if (series == "NT") {
temp <- cap[[series]][17:n]
} else {
if (series == "ACT") {
temp<-cap[[series]][28:n]
} else {
temp<-cap[[series]]
}
}
ur.za(temp, model="both", lag=4)
}
allza <- sapply(names(cap), tempf)
for (i in names(cap)) {print(i); print(allza[[i]]@teststat); print(allza[[i]]@cval)}
dm <- m[2:43,]-m[1:42,]
dcap <- cap[2:43,]-m[1:42,]
dcap <- cap[2:43,]-cap[1:42,]
dcap <- cap[2:43,]-cap[1:42,]
allza_dcap <- sapply(names(cap), tempf, dcap, n-1,1)
dcap <- cap[2:43,]-cap[1:42,]
names(dcap)
dcap[["NSW"]]
data
help(data)
tempf <- function(series, dseries,n,adj) {
if (series == "NT") {
temp <- dseries[[series]][17-adj:n]
} else {
if (series == "ACT") {
temp<-dseries[[series]][28-adj:n]
} else {
temp<-dseries[[series]]
}
}
ur.za(temp, model="both", lag=4)
}
allza_dcap <- sapply(names(cap), tempf, dcap, n-1,1)
tempf <- function(series, dseries,n,adj) {
if (series == "NT") {
temp <- dseries[[series]][(17-adj):n]
} else {
if (series == "ACT") {
temp<-dseries[[series]][(28-adj):n]
} else {
temp<-dseries[[series]]
}
}
ur.za(temp, model="both", lag=4)
}
allza_dcap <- sapply(names(cap), tempf, dcap, n-1,1)
for (i in names(cap)) {print(i); print(allza_dcap[[i]]@teststat); print(allza_dcap[[i]]@cval)}
help(ur.za)
summary(allza$NSW)
q(save="no")
q(save="no")
library("plm")
install.packages("plm")
install.packages("urca")
install.packages("rugarch")
install.packages("rmgarch")
q(save="no")
library(plm)
help(plm)
q(save="no")
x <- seq(-2,2,0.01)
y <- (1-x)^(1/3)*(x^(2/3))
plot(x,y, type="l")
y <- (1-x)^(1/3)*((x^2)^(1/3))
plot(x,y, type="l")
View(y)
m <- read.csv("~/research/WrightAusten/temp_anxhkaud.csv")
m <- read.csv("~/research/WrightAusten/temp_anxhkaud.csv", header=TRUE)
View(m)
q(save="n")
q(save="n0")
q(save="no")
m <- read.csv("~/research/WrightAusten/localtime_anxhkaud.csv", header=TRUE)
View(m)
dim(m)
m[(m[["hour"]]==9)&*m[["minute"]]==30]
m[(m[["hour"]]==9)*m[["minute"]]==30]
m[(m[["hour"]]==9)]
m[["hour"]]
m$hour = m[["hour"]]
m$hour == m[["hour"]]
m[m$hour==9]
m$hour
m[(m[["hour"]]==9)*m[["minute"]]==30,]
m[(m[["hour"]]==0),]
dim(m[(m[["hour"]]==0),])
m[7,]
View(m)
View(m)
q(save="no")
help(optim)
help.search("L-BFGS-B")
help.search("BFGS")
q(save="no")
q(save="no")
x <- c(1,2,3,4,5)
sum(x)
mean(x)
seq(-10,10,0.01)
for (i in x) {
sx <- sx + i
}
sx <- 0
for (i in x) {
sx <- sx + i
}
sx
x
as.matrix(x).t %*% as.matrix(rep(1,5))
help(as.matrix)
as.matrix(x, 1, 5) %*% as.matrix(rep(1,5),5,1)
matrix(x, 1, 5) %*% matrix(rep(1,5),5,1)
setwd("~/Dropbox/sharing_teaching/RWorkShops/exercises/")
m <- read.csv("exchange_20120920.csv", header=TRUE)
m
help(read.csv)
m[1:10,1:10]
m[1:10,]
m <- read.csv("exchange_20120920.csv", header=TRUE, skip=5)
m[1:10,]
m <- read.csv("exchange_20120920.csv", header=TRUE, skip=6)
m[1:10,]
n <- names(m)
n
n
n
dim(m)
for (i in n[2:5]) {
assign(paste("ld", i, sep="_"), log(m$i[2:3394])/m$i[1:3393])
}
i
m$i
for (i in n[2:5]) {
assign(paste("ld", i, sep="_"), log(m[[i]][2:3394])/m[[i]][1:3393])
}
paste("a", "b", "c", sep="_")
paste("a", "b", "c", sep=",")
paste("a", "b", "c","d", sep=",")
n <- length(x)
n
x <- c(5,4,3,2,1,23,4,3,4,11)
n
n <- length(x)
n
x
#variance
#solution 1
v1 <- function(x) {
n <- length(x)
sx <- 0
for (i in x) {
sx <- sx + i^2
}
v <- sx/(n-1)
return(v)
}
#solution 2
v2 <- function(x) {
sx <- 0
x2 <- x^2
for (i in x2) {
sx = sx + i
}
v <- sx/(n-1)
}
#solution 3
s1 <- function(x) {
sx <- 0
for (i in x) {
sx <- sx + i
}
return(sx)
}
v3 <- function(x) {
n <- length(x)
x2 <- x^2
sx <- s1(x2)
v <- sx/(n-1)
return(v)
}
v3(x)
v2(x)
v2 <- function(x) {
sx <- 0
x2 <- x^2
for (i in x2) {
sx = sx + i
}
v <- sx/(n-1)
return(v)
}
v2(x)
v1(x)
names(m)
testlm <- lm(m$spot~1+m$future)
summary(testlm)
testlm <- lm(m$spot~1+m$future+m$ukr)
summary(testlm)
help(while)
help.search("while")
q(save="no")
